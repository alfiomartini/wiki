"""
Django settings for wiki project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# __file__ returns an absolute path and dirname is used twice to traverse two directories
#   above the settings.py file. What happens on your system?

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# os.path.dirname(path) will return a string of everything that comes
# before the last slash in the path argument

# C:\Users\alfio\Programming\GitHub\wiki\wiki\settings.py
# print('abspath', os.path.abspath(__file__))

# C:\Users\alfio\Programming\GitHub\wiki\wiki
# print('first level', os.path.dirname(os.path.abspath(__file__)))

# C:\Users\alfio\Programming\GitHub\wiki
# print('BASE_DIR', BASE_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = os.environ.get('WIKI_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = os.environ.get('DJANGO_DEBUG', '') != 'False'

# when debug is false
ALLOWED_HOSTS = ['localhost', ".herokuapp.com"]


# Application definition

INSTALLED_APPS = [
    'encyclopedia',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wiki.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wiki.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

AUTH_USER_MODEL = 'encyclopedia.User'
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#  Static Files serving
# see: https://medium.com/@vonkunesnewton/understanding-static-files-in-django-heroku-1b8d2f003977
# see: https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Deployment
# see: https://medium.com/@vonkunesnewton/understanding-static-files-in-django-heroku-1b8d2f003977

# The absolute path to the directory where collectstatic will collect static files for deployment.
# python manage.py collecstatic
STATIC_ROOT = os.path.join(BASE_DIR, 'static_files')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

# Extra lookup directories for collectstatic to find static files
# It is not needed in my case, since by default it looks into each
# static file in the static folder of each app
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'encyclopedia/static'),
# )

# https://docs.djangoproject.com/en/3.1/ref/settings/#settings-staticfiles
# https://stackoverflow.com/questions/35571256/found-another-file-with-the-destination-path-where-is-that-other-file
# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# )
